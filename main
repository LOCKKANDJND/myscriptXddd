-- MatrixHub for Da Hood (Fictional Sandbox Simulation - Delta Executor Compatible)
local MatrixHub = {}
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = Workspace.CurrentCamera

-- UI Setup (Mobile-Friendly)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MatrixHubUI"
ScreenGui.Parent = game:GetService("CoreGui")  -- Exploit-accessible
ScreenGui.IgnoreGuiInset = true
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0.4, 0, 0.6, 0)  -- Scalable for mobile
MainFrame.Position = UDim2.new(0.3, 0, 0.2, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(26, 26, 46)  -- Dark theme
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Text = "MatrixHub"
TitleLabel.Size = UDim2.new(1, 0, 0.1, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.TextColor3 = Color3.fromRGB(0, 212, 255)  -- Neon blue
TitleLabel.Font = Enum.Font.SourceSansBold
TitleLabel.TextSize = 24  -- Readable on mobile
TitleLabel.Parent = MainFrame

local TabFrame = Instance.new("Frame")
TabFrame.Size = UDim2.new(1, 0, 0.05, 0)
TabFrame.Position = UDim2.new(0, 0, 0.1, 0)
TabFrame.BackgroundTransparency = 1
TabFrame.Parent = MainFrame

local Tabs = {"Visual", "Aimbot", "Misc", "Whitelist", "Teleport"}
local CurrentTab = "Aimbot"
local TabContents = {}

for i, tabName in ipairs(Tabs) do
    local TabButton = Instance.new("TextButton")
    TabButton.Text = tabName
    TabButton.Size = UDim2.new(1/#Tabs, 0, 1, 0)
    TabButton.Position = UDim2.new((i-1)/#Tabs, 0, 0, 0)
    TabButton.BackgroundColor3 = Color3.fromRGB(30, 30, 50)
    TabButton.TextColor3 = Color3.new(1,1,1)
    TabButton.Font = Enum.Font.SourceSans
    TabButton.TextSize = 16  -- Touch-friendly
    TabButton.Parent = TabFrame
    
    TabButton.MouseButton1Click:Connect(function()
        CurrentTab = tabName
        -- Hide/show content (simulated tab switch)
        for _, content in pairs(TabContents) do
            content.Visible = false
        end
        if TabContents[tabName] then
            TabContents[tabName].Visible = true
        end
    end)
end

-- Create Tab Contents (Frames)
for _, tabName in ipairs(Tabs) do
    local ContentFrame = Instance.new("ScrollingFrame")
    ContentFrame.Size = UDim2.new(1, 0, 0.85, 0)
    ContentFrame.Position = UDim2.new(0, 0, 0.15, 0)
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.ScrollBarThickness = 5  -- Mobile scroll
    ContentFrame.Visible = false
    ContentFrame.Parent = MainFrame
    TabContents[tabName] = ContentFrame
end

-- Aimbot Settings (Matching Image)
MatrixHub.Aimbot = {
    Enabled = false,
    Key = Enum.KeyCode.E,  -- Toggle key
    Method = "CamLock",
    SortType = "Near Crosshair",
    TargetPart = "Head",
    Smoothness = 0.05,
    Toggle = true,
    Predict = false,
    Resolve = false,
    PredictX = 0.00,
    PredictY = 0.00,
    SilentAim = false,
    TriggerBot = false
}

-- Add UI Elements for Aimbot Tab
local AimbotContent = TabContents["Aimbot"]
local function AddToggle(parent, name, default)
    local Toggle = Instance.new("TextButton")
    Toggle.Text = name .. ": " .. (default and "On" or "Off")
    Toggle.Size = UDim2.new(1, 0, 0.1, 0)
    Toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    Toggle.TextColor3 = Color3.new(1,1,1)
    Toggle.TextSize = 14
    Toggle.Parent = parent
    return Toggle
end

local ToggleAimbot = AddToggle(AimbotContent, "Toggle Aimbot", false)
ToggleAimbot.MouseButton1Click:Connect(function()
    MatrixHub.Aimbot.Enabled = not MatrixHub.Aimbot.Enabled
    ToggleAimbot.Text = "Toggle Aimbot: " .. (MatrixHub.Aimbot.Enabled and "On" or "Off")
end)

-- Similar for other toggles: Predict, Resolve, SilentAim, TriggerBot
-- Add sliders for Smoothness, PredictX/Y (use TextBox for simplicity)
local SmoothnessBox = Instance.new("TextBox")
SmoothnessBox.Text = "Smoothness: 0.05"
SmoothnessBox.Size = UDim2.new(1, 0, 0.1, 0)
SmoothnessBox.Parent = AimbotContent
SmoothnessBox.FocusLost:Connect(function()
    MatrixHub.Aimbot.Smoothness = tonumber(SmoothnessBox.Text:match("%d+%.%d+")) or 0.05
end)

-- ... Add more UI elements similarly for dropdowns (Method, SortType, TargetPart)

-- Visual (ESP) Settings
MatrixHub.Visual = {
    ESPBox = false,
    ESPType = "2D",
    ESPFilled = false,
    ESPDistance = true,
    ESPName = true,
    ESPHealth = true,
    ESPSnapline = true,
    LimitDistance = false
}

-- Add UI for Visual Tab (similar to above, toggles for each)

-- Misc Settings
MatrixHub.Misc = {
    TeamCheck = false,
    NPCCheck = false,
    HealthCheck = false
}

-- Add UI for Misc Tab

-- Whitelist & Teleport (Placeholders)
MatrixHub.Whitelist = {}  -- Table for whitelisted players
MatrixHub.Teleport = {}   -- Function for teleport

-- Core Aimbot Logic (CamLock Simulation)
local Aiming = false
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == MatrixHub.Aimbot.Key then
        Aiming = not Aiming
    end
end)

RunService.RenderStepped:Connect(function()
    if MatrixHub.Aimbot.Enabled and Aiming then
        local target, minDist = nil, math.huge
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local root = player.Character.HumanoidRootPart
                local dist = (root.Position - Mouse.Hit.Position).Magnitude
                if dist < minDist and (not MatrixHub.Misc.TeamCheck or player.Team ~= LocalPlayer.Team) then
                    minDist = dist
                    target = player
                end
            end
        end
        if target then
            local targetPos = target.Character[MatrixHub.Aimbot.TargetPart].Position
            if MatrixHub.Aimbot.Predict then
                targetPos = targetPos + Vector3.new(MatrixHub.Aimbot.PredictX, MatrixHub.Aimbot.PredictY, 0)
            end
            local smooth = MatrixHub.Aimbot.Smoothness
            Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(Camera.CFrame.Position, targetPos), smooth)
        end
    end
end)

-- ESP Logic (Using Drawing API for Simulation)
local ESPDrawings = {}
RunService.RenderStepped:Connect(function()
    for _, drawing in pairs(ESPDrawings) do drawing:Remove() end
    ESPDrawings = {}
    if MatrixHub.Visual.ESPBox then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
                local humanoid = player.Character.Humanoid
                local root = player.Character.HumanoidRootPart
                local screenPos, onScreen = Camera:WorldToViewportPoint(root.Position)
                if onScreen then
                    -- Draw 2D Box
                    local box = Drawing.new("Square")
                    box.Size = Vector2.new(50, 100)  -- Example size
                    box.Position = Vector2.new(screenPos.X - 25, screenPos.Y - 50)
                    box.Color = Color3.new(1,0,0)
                    box.Thickness = 2
                    box.Visible = true
                    table.insert(ESPDrawings, box)
                    
                    -- Name, Health, etc.
                    if MatrixHub.Visual.ESPName then
                        local name = Drawing.new("Text")
                        name.Text = player.Name
                        name.Position = Vector2.new(screenPos.X, screenPos.Y - 60)
                        name.Visible = true
                        table.insert(ESPDrawings, name)
                    end
                    -- Add similar for Health, Distance, Snapline
                end
            end
        end
    end
end)

-- Initialization
TabContents["Aimbot"].Visible = true  -- Default tab
print("MatrixHub Loaded in Sandbox Simulation")

-- End of Script
